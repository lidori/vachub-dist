{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/layout.component.ts","./src/app/account/layout.component.html","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/register.component.ts","./src/app/account/register.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEF;AACF;AACM;;;AAEzD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe;QACpC,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+DAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qEAAiB,EAAE;SACrD;KACJ;CACJ,CAAC;AAMK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEb,oBAAoB,uFAFnB,4DAAY;6FAEb,oBAAoB;cAJhC,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACY;AACN;AAEiB;AACX;AACF;AACM;AAEU;;AAiB5D,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBAZb;YACL,4DAAY;YACZ,kEAAmB;YACnB,4EAAoB;YACpB,8EAAqB;SACxB;mIAOQ,aAAa,mBALlB,iEAAe;QACf,+DAAc;QACd,qEAAiB,aARjB,4DAAY;QACZ,kEAAmB;QACnB,4EAAoB;QACpB,8EAAqB;6FAQhB,aAAa;cAbzB,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY;oBACZ,kEAAmB;oBACnB,4EAAoB;oBACpB,8EAAqB;iBACxB;gBACD,YAAY,EAAE;oBACV,iEAAe;oBACf,+DAAc;oBACd,qEAAiB;iBACpB;aACJ;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAMnC,MAAM,eAAe;IACxB,YACY,MAAc,EACd,cAA8B;QAD9B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAEtC,wCAAwC;QACxC,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/B;IACL,CAAC;;8EATQ,eAAe;+FAAf,eAAe;QCN5B,2EAA+B;;6FDMlB,eAAe;cAD3B,uDAAS;eAAC,EAAE,WAAW,EAAE,uBAAuB,EAAE;;;;;;;;;;;;;;AECnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;AAIlE,MAAM,cAAc;IAYzB,YAAoB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,YAA0B;QAH1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAP9C,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAM+B,CAAC;IAElD,QAAQ;QACN,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;QACrE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,kBAAkB;QAEhB,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,EAC/D,CAAC,UAAU,EAAE,EAAE;YAEb,IAAI,OAAO,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;YACnD,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAC7C,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAmB,EAAC,EAC9E,IAAI,CAAC,KAAK,CAAC,CAAC;YACd,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;QACH,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YACX,6CAA6C;YAC7C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAC7C,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAmB,EAAC,CAAC,CAAC;QAClF,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;IAED,8DAA8D;IAC9D,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,SAAS;QAEP,MAAM,CAAC,iBAAiB,CAAC,GAAG,GAAG,EAAE;YAC/B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;gBAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;oBACrC,SAAS,EAAE,yEAAyE;oBACpF,YAAY,EAAE,oBAAoB;oBAClC,KAAK,EAAE,eAAe;iBACvB,CAAC,CAAC;gBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC;QAED,CAAC,UAAS,CAAC,EAAE,CAAC,EAAE,EAAE;YAChB,IAAI,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;gBAAC,OAAO;aAAC;YACnC,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;YACpC,EAAE,CAAC,GAAG,GAAG,+DAA+D,CAAC;YACzE,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC;IAEzC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,ouCAAouC,CAAC;QAClvC,IAAI,CAAC,EAAE,GAAG,uBAAuB,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,2HAA2H,CAAC;QAC7I,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC;IAC3C,CAAC;;4EAtHU,cAAc;8FAAd,cAAc;;;;;;QCkB3B,yEAAsD;QACtD,0EACE;QAAA,uEAAM;QAAA,8EAAmB;QAAA,4DAAO;QAClC,4DAAI;QACJ,4EAA+B;QAAvB,sIAAS,gBAAY,IAAC;QAAC,uEAAY;QAAA,4DAAS;;6FDtBvC,cAAc;cAD1B,uDAAS;eAAC,EAAE,WAAW,EAAE,sBAAsB,EAAE;;kBAQ/C,uDAAS;mBAAC,UAAU,EAAE,EAAC,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AEjBxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;;;;;;;ICMhD,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADzE,0EACI;IAAA,oHAAyC;IAC7C,4DAAM;;;IADG,0DAAmC;IAAnC,oGAAmC;;;IAOxC,sEAAwC;IAAA,gFAAqB;IAAA,4DAAM;;;IADvE,0EACI;IAAA,qHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAOvC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADtE,0EACI;IAAA,qHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAOvC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IAAA,iGAAsC;IAAA,4DAAM;;;IAFzF,0EACI;IAAA,qHAAwC;IACxC,qHAAyC;IAC7C,4DAAM;;;IAFG,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAmC;IAAnC,oGAAmC;;;IAKxC,sEAA2E;;;AD3BxF,MAAM,iBAAiB;IAM1B,YACY,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,YAA0B;QAJ1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QARtC,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAQd,CAAC;IAEL,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE,CAAC,CAAC;IACP,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEtC,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACnB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,gDAAgD;QAChD,qBAAqB;QACrB,kBAAkB;QAClB,oBAAoB;QACpB,oGAAoG;QACpG,8EAA8E;QAC9E,aAAa;QACb,qBAAqB;QACrB,8CAA8C;QAC9C,oCAAoC;QACpC,cAAc;IAClB,CAAC;;kFAjDQ,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACI;QAAA,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,yEACI;QAAA,0EACI;QADqB,6IAAY,cAAU,IAAC;QAC5C,yEACI;QAAA,2EAAuB;QAAA,qEAAU;QAAA,4DAAQ;QACzC,sEACA;QAAA,6GACI;QAER,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,uEACA;QAAA,+GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEACA;QAAA,+GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEACA;QAAA,+GACI;QAGR,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,kHAAoE;QACpE,sEACJ;QAAA,4DAAS;QACT,yEAA8C;QAAA,kEAAM;QAAA,4DAAI;QAC5D,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;QAvCQ,0DAAkB;QAAlB,+EAAkB;QAGoD,0DAA6D;QAA7D,oLAA6D;QAC5H,0DAAuC;QAAvC,yGAAuC;QAMuB,0DAA4D;QAA5D,mLAA4D;QAC1H,0DAAsC;QAAtC,wGAAsC;QAMwB,0DAA4D;QAA5D,mLAA4D;QAC1H,0DAAsC;QAAtC,wGAAsC;QAM4B,0DAA4D;QAA5D,mLAA4D;QAC9H,0DAAsC;QAAtC,wGAAsC;QAMnC,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FD3B5B,iBAAiB;cAD7B,uDAAS;eAAC,EAAE,WAAW,EAAE,yBAAyB,EAAE","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: 'login', component: LoginComponent },\n            { path: 'register', component: RegisterComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AccountRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\nimport { AngularMaterialModule } from '../angular-material.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        AccountRoutingModule,\n        AngularMaterialModule\n    ],\n    declarations: [\n        LayoutComponent,\n        LoginComponent,\n        RegisterComponent\n    ]\n})\nexport class AccountModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '../_services';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {\n        // redirect to home if already logged in\n        if (this.accountService.userValue) {\n            this.router.navigate(['/']);\n        }\n    }\n}\n","<router-outlet></router-outlet>\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '../_services';\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n  auth2: any;\n  token: string;\n  id: string;\n  userName: string;\n  userImage: any;\n  userEmail: string;\n  @ViewChild('loginRef', {static: true }) loginElement: ElementRef;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private accountService: AccountService,\n              private alertService: AlertService) {}\n\n  ngOnInit() {\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    this.googleSDK();\n  }\n\n  prepareLoginButton() {\n\n    this.auth2.attachClickHandler(this.loginElement.nativeElement, {},\n      (googleUser) => {\n\n        let profile = googleUser.getBasicProfile();\n        this.token = googleUser.getAuthResponse().id_token;\n        this.id = profile.getId();\n        this.userName = profile.getName();\n        this.userImage = profile.getImageUrl();\n        this.userEmail = profile.getEmail();\n        console.log(this.token);\n        console.log(this.id);\n        console.log(this.userName);\n        console.log(this.userImage);\n        console.log(this.userEmail);\n        const authenticated = this.accountService.login(\n          {id: this.userEmail, username: this.userName, image: this.userImage as string},\n          this.auth2);\n        if (authenticated) {\n            this.router.navigate([this.returnUrl]);\n        } else {\n          this.alertService.error('Not authenticated');\n          this.loading = false;\n        }\n      }, (error) => {\n        //alert(JSON.stringify(error, undefined, 2));\n        this.alertService.error(error);\n        this.loading = false;\n      });\n\n  }\n\n  fakeSignIn() {\n    this.fakeData();\n    const authenticated = this.accountService.login(\n      {id: this.userEmail, username: this.userName, image: this.userImage as string});\n    if (authenticated) {\n        this.router.navigate([this.returnUrl]);\n    } else {\n      this.alertService.error('Not authenticated');\n      this.loading = false;\n    }\n  }\n\n  //TODO need to sign out, put auth in the account service maybe\n  signOut() {\n    this.auth2.signOut().then(function () {\n      this.token = undefined;\n      this.id = undefined;\n      this.userName = undefined;\n      this.userImage = undefined;\n      this.userEmail = undefined;\n      console.log('User signed out.');\n    });\n  }\n\n  fakeSignOut() {\n    this.token = undefined;\n    this.id = undefined;\n    this.userName = undefined;\n    this.userImage = undefined;\n    this.userEmail = undefined;\n    console.log('User signed out.');\n  }\n\n  googleSDK() {\n\n    window['googleSDKLoaded'] = () => {\n      window['gapi'].load('auth2', () => {\n        this.auth2 = window['gapi'].auth2.init({\n          client_id: '84095791683-jamqlcm8okffem4uldev6oas68stqjlh.apps.googleusercontent.com',\n          cookiepolicy: 'single_host_origin',\n          scope: 'profile email'\n        });\n        this.prepareLoginButton();\n      });\n    }\n\n    (function(d, s, id){\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {return;}\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'google-jssdk'));\n\n  }\n\n  fakeData() {\n    this.token = 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjI4Yjc0MWU4ZGU5ODRhNDcxNTlmMTllNmQ3NzgzZTlkNGZhODEwZGIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiODQwOTU3OTE2ODMtamFtcWxjbThva2ZmZW00dWxkZXY2b2FzNjhzdHFqbGguYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI4NDA5NTc5MTY4My1qYW1xbGNtOG9rZmZlbTR1bGRldjZvYXM2OHN0cWpsaC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExMTY3Mzg4NzUyNDE0ODgwODU4MiIsImVtYWlsIjoic2hpcmEueW9rZWRAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF0X2hhc2giOiJ4Q0F4NFNBRFVma0pPNUY3ZWdCWVZnIiwibmFtZSI6IlNoaXJhIFlva2VkIiwicGljdHVyZSI6Imh0dHBzOi8vbGg0Lmdvb2dsZXVzZXJjb250ZW50LmNvbS8tamVfQlpBaWlkRFEvQUFBQUFBQUFBQUkvQUFBQUFBQUFBQUEvQUFLV0pKTWcxODBUNUdhZWpkZmFPR1poZ0JJLURLZGhtdy9zOTYtYy9waG90by5qcGciLCJnaXZlbl9uYW1lIjoiU2hpcmEiLCJmYW1pbHlfbmFtZSI6Illva2VkIiwibG9jYWxlIjoiZW4iLCJpYXQiOjE1ODgxMjAxMzksImV4cCI6MTU4ODEyMzczOSwianRpIjoiYTJmYWYyOWQwYjc0MTY2Yzc0YTdjZWFjZjViMWY0MDU5ZjNjZTBmNSJ9.qkA4O3jqjNsd1MHAZAbertNpOQ0fAYxXuE6NFNuGs9swJ9ZJcWtM9HC13jvc84bD5Bq63ewdCKsKPep1YbVTYKypCkntjHGsHiY5SBt4snDWI7v_4F84n4HZOcymZ8weRqy6t8LKBcHeNMC0mlFYvdFb5IiTaWb5xPtmdKSF_pW2yQFLr2kkylyvTQznmr39wE2DKDgT61sHBz27aH_z-Qvj6on4J6rUjc1m_28KlFgxNSdwDX3JR8_eDvt5d9pCdC-Av4SLEGqO2qEccAJQ4uMi1xFi1s-qi3iVhhQRQg3JfpuwmvvKA1AbsfsB7tzW98ppeht9nMPuqr_4-QXvRg';\n    this.id = '111673887524148808582';\n    this.userName = 'Shira Yoked';\n    this.userImage = 'https://lh4.googleusercontent.com/-je_BZAiidDQ/AAAAAAAAAAI/AAAAAAAAAAA/AAKWJJMg180T5GaejdfaOGZhgBI-DKdhmw/s96-c/photo.jpg';\n    this.userEmail = 'shira.yoked@gmail.com';\n  }\n    /*form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }*/\n}\n","<!-- <div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div> -->\n<mat-icon svgIcon=\"google\" class=\"vh-icon\"></mat-icon>\n<a class=\"vh-login-google\" #loginRef>\n  <span>Sign In with Google</span>\n</a>\n<button (click)=\"fakeSignIn()\">fake sign in</button>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '../_services';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n  //TODO: remove this component if cannot register\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        // this.accountService.register(this.form.value)\n        //     .pipe(first())\n        //     .subscribe(\n        //         data => {\n        //             this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n        //             this.router.navigate(['../login'], { relativeTo: this.route });\n        //         },\n        //         error => {\n        //             this.alertService.error(error);\n        //             this.loading = false;\n        //         });\n    }\n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Register</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Register\n                </button>\n                <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}