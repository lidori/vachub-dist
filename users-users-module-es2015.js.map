{"version":3,"sources":["./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts","./src/app/users/vacation-type-icon.component.ts","./src/app/users/vacation-type-icon.component.html","./src/app/users/vaclist.component.ts","./src/app/users/vaclist.component.html"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { first } from 'rxjs/operators';\n\nimport { VacationService, AccountService, AlertService } from '../_services';\n\nimport { Vacation } from '../_models';\nimport { VacationType } from '../_models/vacation';\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.component.html',\n  styleUrls: ['./add-edit.component.scss']\n})\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n    VacationType = VacationType;\n\n    constructor(\n        public formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private vacationService: VacationService,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n\n        // // password not required in edit mode\n        // const passwordValidators = [Validators.minLength(6)];\n        // if (this.isAddMode) {\n        //     passwordValidators.push(Validators.required);\n        // }\n\n        this.form = this.formBuilder.group({\n            title: ['', Validators.required],\n            description: [''],\n            type: [null, Validators.required]\n        });\n\n        if (!this.isAddMode) {\n            // this.accountService.getById(this.id)\n            //     .pipe(first())\n            //     .subscribe(x => {\n            //         this.f.firstName.setValue('');\n            //         this.f.lastName.setValue('');\n            //         this.f.username.setValue(x.username);\n            //     });\n            this.vacationService.getAll()\n                .pipe(first())\n                .subscribe(vacations => {\n                  const vacJson = vacations.find(vacation =>\n                    JSON.parse(vacation.toString()).id === this.id\n                  );\n                  const vac = JSON.parse(vacJson.toString());\n                  this.f.title.setValue(vac.title);\n                  this.f.description.setValue(vac.description);\n                  this.f.type.setValue(vac.type);\n                  //remove\n                  console.log('edit!!!', vac);\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUpdateVacation();\n        } else {\n            this.createUpdateVacation(this.id);\n        }\n    }\n\n    private createUpdateVacation(id?: string) {\n      const newVac = this.form.value;\n      if (id) {\n        newVac.id = id;\n      } else {\n          newVac.id = this.accountService.userValue.id + '-' + this.uuidv4();\n      }\n      this.vacationService.createUpdateVacation(newVac)\n          .pipe(first())\n          .subscribe(\n              data => {\n                  this.alertService.success('Vacation added successfully', { keepAfterRouteChange: true });\n                  this.router.navigate(['.', { relativeTo: this.route }]);\n              },\n              error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n              });\n    }\n\n    private uuidv4() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n      });\n    }\n\n    // private updateUser() {\n    //     this.accountService.update(this.id, this.form.value)\n    //         .pipe(first())\n    //         .subscribe(\n    //             data => {\n    //                 this.alertService.success('Update successful', { keepAfterRouteChange: true });\n    //                 this.router.navigate(['..', { relativeTo: this.route }]);\n    //             },\n    //             error => {\n    //                 this.alertService.error(error);\n    //                 this.loading = false;\n    //             });\n    // }\n}\n","<h1 *ngIf=\"isAddMode\">Add Vacation</h1>\n<h1 *ngIf=\"!isAddMode\">Edit Vacation</h1>\n\n<!-- <form [formGroup]=\"form\">\n  <mat-select [(value)]=\"selected\" formControlName=\"grade\">\n   <mat-option [value]=\"gradeArray\" *ngFor=\"let gradeArray of GradeArray\">{{gradeArray}}\n   </mat-option>\n </mat-select>\n</form> -->\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"vac-row\">\n      <mat-form-field class=\"vac-title\">\n        <mat-label>Title</mat-label>\n        <input matInput formControlName=\"title\" required/>\n        <div *ngIf=\"submitted && f.title.errors\" class=\"vh-invalid-feedback\">\n            <div *ngIf=\"f.title.errors.required\">Title is required</div>\n        </div>\n      </mat-form-field>\n      <mat-form-field class=\"vac-type\">\n          <mat-label>Type</mat-label>\n          <mat-select formControlName=\"type\" required>\n              <mat-option [value]=\"VacationType.travel\">{{VacationType.travel}}</mat-option>\n              <mat-option [value]=\"VacationType.cruise\">{{VacationType.cruise}}</mat-option>\n              <mat-option [value]=\"VacationType.sports\">{{VacationType.sports}}</mat-option>\n              <mat-option [value]=\"VacationType.shopping\">{{VacationType.shopping}}</mat-option>\n              <mat-option [value]=\"VacationType.flight\">{{VacationType.flight}}</mat-option>\n              <mat-option [value]=\"VacationType.business\">{{VacationType.business}}</mat-option>\n              <mat-option [value]=\"VacationType.virtual\">{{VacationType.virtual}}</mat-option>\n              <mat-option [value]=\"VacationType.other\">{{VacationType.other}}</mat-option>\n          </mat-select>\n          <div *ngIf=\"submitted && f.type.errors\" class=\"vh-invalid-feedback\">\n              <div *ngIf=\"f.type.errors.required\">Type is required</div>\n          </div>\n      </mat-form-field>\n      <app-vacation-type-icon [vacationType]=\"f.type.value\"></app-vacation-type-icon>\n    </div>\n    <div class=\"vac-row\">\n      <mat-form-field class=\"vac-desc\">\n        <mat-label>Description</mat-label>\n        <textarea matInput formControlName=\"description\"></textarea>\n      </mat-form-field>\n    </div>\n    <br>\n    <div class=\"vac-buttons\">\n        <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"loading\">\n            <span *ngIf=\"!loading\">Save</span>\n            <mat-spinner *ngIf=\"loading\" diameter=\"30\"></mat-spinner>\n        </button>\n        <button mat-button color=\"primary\" routerLink=\"/users\" type=\"button\">Cancel</button>\n    </div>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models';\nimport { AccountService } from '../_services';\n\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n    users: User[] = [];\n    displayedColumns: string[] = ['select', 'username', 'id', 'image'];\n    dataSource: MatTableDataSource<any>;\n    selection = new SelectionModel<User>(true, []);\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        //remove\n        console.log('in list');\n        this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => {\n              users.forEach(user => {\n                const userString = user.toString();\n                this.users.push(JSON.parse(userString))\n              });\n              this.dataSource = new MatTableDataSource<User>(this.users);\n              this.dataSource.filterPredicate = function(data, filter): boolean {\n                return (data.username.toLowerCase().includes(filter) ||\n                data.id.toLowerCase().includes(filter));\n              };\n            });\n    }\n\n    // deleteUser(id: string) {\n    //     const user = this.users.find(x => x.id === id);\n    //     user.isDeleting = true;\n    //     this.accountService.delete(id)\n    //         .pipe(first())\n    //         .subscribe(() => {\n    //             this.users = this.users.filter(x => x.id !== id)\n    //         });\n    // }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: User): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id}`;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<h1>Users</h1>\n<!-- <a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">First Name</th>\n            <th style=\"width: 30%\">Last Name</th>\n            <th style=\"width: 30%\">Username</th>\n            <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.firstName}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.username}}</td>\n            <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\n                </button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!users\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr>\n    </tbody>\n</table> -->\n<!-- <div *ngFor=\"let user of users\">\n    User name:<div>{{user.username}}</div>\n    Email: <div>{{user.id}}</div>\n    Image: <div><img [src]=\"user.image\"></div>\n</div> -->\n<mat-form-field>\n  <mat-label>Filter</mat-label>\n  <mat-icon svgIcon=\"search\" matPrefix class=\"vh-prefix-icon\"></mat-icon>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\">\n</mat-form-field>\n\n<table *ngIf=\"dataSource\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z1\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let user\" class=\"name-cell\" [matTooltip]=\"user.username\"> {{user.username}} </td>\n  </ng-container>\n\n  <!-- Email Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Email </th>\n    <td mat-cell *matCellDef=\"let user\" class=\"email-cell\" [matTooltip]=\"user.id\"> {{user.id}} </td>\n  </ng-container>\n\n  <!-- Image Column -->\n  <ng-container matColumnDef=\"image\">\n    <th mat-header-cell *matHeaderCellDef> </th>\n    <td mat-cell *matCellDef=\"let user\"> <img [src]=\"user.image\" class=\"vh-user-image\"> </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"selection.toggle(row);\">\n  </tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { VaclistComponent } from './vaclist.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: VaclistComponent },\n            { path: 'users', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { VaclistComponent } from './vaclist.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { VacationTypeIconComponent } from './vacation-type-icon.component';\n\nimport { AngularMaterialModule } from '../angular-material.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UsersRoutingModule,\n        AngularMaterialModule\n    ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        VaclistComponent,\n        AddEditComponent,\n        VacationTypeIconComponent\n    ]\n})\nexport class UsersModule { }\n","import { Component, Input } from '@angular/core';\nimport { VacationType } from '../_models/vacation';\n\n@Component({\n  selector: 'app-vacation-type-icon',\n  templateUrl: './vacation-type-icon.component.html',\n  styles: []\n})\nexport class VacationTypeIconComponent {\n\n  VacationType = VacationType;\n  @Input() vacationType: VacationType;\n\n  constructor() {}\n\n  // typeToColor() {\n  //     const str = this.vacationType;\n  //     let hash = 0;\n  //     for (let i = 0; i < str.length; i++) {\n  //         hash = str.charCodeAt(i) + ((hash << 8) - hash);//2 10\n  //     }\n  //     let color = '#';\n  //     for (let i = 0; i < 3; i++) {\n  //         let value = (hash >> (i * 8)) & 0xFF;\n  //         color += ('00' + value.toString(16)).substr(-2);\n  //     }\n  //     return color;\n  // }\n\n  // typeToColor() {\n  //   let color;\n  //   switch(this.vacationType) {\n  //      case VacationType.Travel: {\n  //         color = '#082cad';\n  //         break;\n  //      }\n  //      case VacationType.Cruise: {\n  //         color = '#3a78b7';\n  //         break;\n  //      }\n  //      case VacationType.Flight: {\n  //         color = '#6b14b4';\n  //         break;\n  //      }\n  //      case VacationType.Sports: {\n  //         color = '#E65100';\n  //         break;\n  //      }\n  //      case VacationType.Shopping: {\n  //         color = '#f526d9';\n  //         break;\n  //      }\n  //      case VacationType.Business: {\n  //         color = '#212121';\n  //         break;\n  //      }\n  //      case VacationType.Virtual: {\n  //         color = '#3083f8';\n  //         break;\n  //      }\n  //      default: {\n  //         color = '#448aff';\n  //         break;\n  //      }\n  //   }\n  // }\n}\n","<span [matTooltip]=\"vacationType\">\n  <mat-icon [svgIcon]=\"vacationType\" [class]=\"vacationType\"></mat-icon>\n</span>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models';\nimport { Vacation } from '../_models';\nimport { VacationService, AlertService } from '../_services';\n\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-vac-list',\n  templateUrl: './vaclist.component.html',\n  styleUrls: ['./vaclist.component.scss']\n})\nexport class VaclistComponent implements OnInit {\n    vacations: Vacation[] = [];\n    //displayedColumns: string[] = ['select', 'title', 'description', 'type'];\n    displayedColumns: string[] = ['title', 'description', 'type'];\n    dataSource: MatTableDataSource<any>;\n    //selection = new SelectionModel<Vacation>(true, []);\n    loading = true;\n\n    constructor(private vacationService: VacationService, private alertService: AlertService) {}\n\n    ngOnInit() {\n        this.vacationService.getAll()\n            .pipe(first())\n            .subscribe(vacations => {\n              vacations.forEach(vacation => {\n                const vacationString = vacation.toString();\n                this.vacations.push(JSON.parse(vacationString))\n              });\n              this.dataSource = new MatTableDataSource<Vacation>(this.vacations);\n              this.loading = false;\n              this.dataSource.filterPredicate = function(data, filter): boolean {\n                return (data.title.toLowerCase().includes(filter) ||\n                data.description.toLowerCase().includes(filter) ||\n                data.type.toLowerCase().includes(filter));\n              };\n            },\n            error => {\n                this.alertService.error(error);\n                this.loading = false;\n            });\n    }\n\n    // deleteUser(id: string) {\n    //     const user = this.users.find(x => x.id === id);\n    //     user.isDeleting = true;\n    //     this.accountService.delete(id)\n    //         .pipe(first())\n    //         .subscribe(() => {\n    //             this.users = this.users.filter(x => x.id !== id)\n    //         });\n    // }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  // isAllSelected() {\n  //   const numSelected = this.selection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   return numSelected === numRows;\n  // }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  // masterToggle() {\n  //   this.isAllSelected() ?\n  //       this.selection.clear() :\n  //       this.dataSource.data.forEach(row => this.selection.select(row));\n  // }\n\n  /** The label for the checkbox on the passed row */\n  // checkboxLabel(row?: Vacation): string {\n  //   if (!row) {\n  //     return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n  //   }\n  //   return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id}`;\n  // }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  // typeToColor(str: string) {\n  //     if (str === 'Other') {\n  //       //return '#ff5252';\n  //       return '#448aff';\n  //     }\n  //     let hash = 0;\n  //     for (let i = 0; i < str.length; i++) {\n  //         //hash = str.charCodeAt(i) + ((hash << 2) - hash);\n  //         hash = str.charCodeAt(i) + ((hash << 8) - hash);\n  //     }\n  //     let color = '#';\n  //     for (let i = 0; i < 3; i++) {\n  //         let value = (hash >> (i * 8)) & 0xFF;\n  //         color += ('00' + value.toString(16)).substr(-2);\n  //     }\n  //     return color;\n  // }\n}\n","<h1>Vacations</h1>\n<button mat-flat-button color=\"accent\" routerLink=\"add\">Add Vacation</button>\n<mat-form-field>\n  <mat-label>Filter</mat-label>\n  <mat-icon svgIcon=\"search\" matPrefix class=\"vh-prefix-icon\"></mat-icon>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\">\n</mat-form-field>\n\n<div *ngIf=\"loading\" class=\"vh-spinner-container\"><mat-spinner color=\"accent\"></mat-spinner></div>\n<table *ngIf=\"dataSource\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z1\">\n\n  <!-- Checkbox Column -->\n  <!-- <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container> -->\n\n  <!-- Title Column -->\n  <ng-container matColumnDef=\"title\">\n    <th mat-header-cell *matHeaderCellDef> Title </th>\n    <td mat-cell *matCellDef=\"let vac\" [class]=\"'border-'+vac.type\" class=\"title-cell\" [matTooltip]=\"vac.title\"> \n      {{vac.title}}\n    </td>\n  </ng-container>\n\n  <!-- Descripiton Column -->\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Description </th>\n    <td mat-cell *matCellDef=\"let vac\" class=\"description-cell\" [matTooltip]=\"vac.description\"> {{vac.description}} </td>\n  </ng-container>\n\n  <!-- Type Column -->\n  <ng-container matColumnDef=\"type\">\n    <th mat-header-cell *matHeaderCellDef class=\"icon-column\"> Type </th>\n    <td mat-cell *matCellDef=\"let vac\" class=\"icon-column\">\n      <app-vacation-type-icon [vacationType]=\"vac.type\"></app-vacation-type-icon>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n    routerLink=\"edit/{{row.id}}\">\n  </tr>\n  <!-- <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"selection.toggle(row);\">\n  </tr> -->\n</table>\n"],"sourceRoot":"webpack:///"}