{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/vacation.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/vacation.service.ts","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","console","log","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","ok","firstName","lastName","token","length","Math","max","map","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","Alert","init","AlertType","VacationType","VacationUtil","name","charAt","toUpperCase","slice","AccountService","http","userSubject","asObservable","auth","auth2","createUser","removeItem","googleSignOut","signOut","post","apiUrl","value","AlertService","subject","defaultId","options","VacationService","httpClient","vacation","title","description","AngularMaterialModule","useValue","showDelay","imports","providers","accountModule","AccountModule","usersModule","UsersModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","AppComponent","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","styleUrls","AppModule","declarations","bootstrap","schemas","HomeComponent","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAO;;AACrD;;AACJ;;;;;;;;AAHkC;;AAExB;;AAAA;;;;QDMGC,c;AAQT,8BAAoBC,MAApB,EAA4CC,YAA5C,EAAwE;AAAA;;AAApD,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,YAAA,GAAAA,YAAA;AAPnC,aAAAH,EAAA,GAAK,eAAL;AACA,aAAAI,IAAA,GAAO,IAAP;AAET,aAAAC,MAAA,GAAkB,EAAlB;AAI2E;;;;mCAEhE;AAAA;;AACP;AACA,eAAKC,iBAAL,GAAyB,KAAKH,YAAL,CAAkBI,OAAlB,CAA0B,KAAKP,EAA/B,EACpBQ,SADoB,CACV,UAAAC,KAAK,EAAI;AAClB;AACAC,mBAAO,CAACC,GAAR,CAAYF,KAAZ,EAFkB,CAGhB;;AACA,gBAAI,CAACA,KAAK,CAACG,OAAX,EAAoB;AAChB;AACA,mBAAI,CAACP,MAAL,GAAc,KAAI,CAACA,MAAL,CAAYQ,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,oBAAN;AAAA,eAApB,CAAd,CAFgB,CAIhB;;AACA,mBAAI,CAACV,MAAL,CAAYW,OAAZ,CAAoB,UAAAF,CAAC;AAAA,uBAAI,OAAOA,CAAC,CAACC,oBAAb;AAAA,eAArB;;AACA;AACH,aAXe,CAahB;;;AACA,iBAAI,CAACV,MAAL,CAAYY,IAAZ,CAAiBR,KAAjB,EAdgB,CAgBhB;;;AACA,gBAAIA,KAAK,CAACS,SAAV,EAAqB;AACjBC,wBAAU,CAAC;AAAA,uBAAM,KAAI,CAACC,WAAL,CAAiBX,KAAjB,CAAN;AAAA,eAAD,EAAgC,IAAhC,CAAV;AACH;AACL,WArBqB,CAAzB,CAFO,CAyBP;;AACA,eAAKY,iBAAL,GAAyB,KAAKnB,MAAL,CAAYoB,MAAZ,CAAmBd,SAAnB,CAA6B,UAAAe,KAAK,EAAI;AAC3D,gBAAIA,KAAK,YAAY,+DAArB,EAAsC;AAClC,mBAAI,CAACpB,YAAL,CAAkBqB,KAAlB,CAAwB,KAAI,CAACxB,EAA7B;AACH;AACJ,WAJwB,CAAzB;AAKH;;;sCAEa;AACV;AACA,eAAKM,iBAAL,CAAuBmB,WAAvB;AACA,eAAKJ,iBAAL,CAAuBI,WAAvB;AACH;;;oCAEWhB,K,EAAc;AAAA;;AACtB;AACA,cAAI,CAAC,KAAKJ,MAAL,CAAYqB,QAAZ,CAAqBjB,KAArB,CAAL,EAAkC;;AAElC,cAAI,KAAKL,IAAT,EAAe;AACX;AACA,iBAAKC,MAAL,CAAYsB,IAAZ,CAAiB,UAAAb,CAAC;AAAA,qBAAIA,CAAC,KAAKL,KAAV;AAAA,aAAlB,EAAmCL,IAAnC,GAA0C,IAA1C,CAFW,CAIX;;AACAe,sBAAU,CAAC,YAAM;AACb,oBAAI,CAACd,MAAL,GAAc,MAAI,CAACA,MAAL,CAAYQ,MAAZ,CAAmB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,KAAKL,KAAV;AAAA,eAApB,CAAd;AACH,aAFS,EAEP,GAFO,CAAV;AAGH,WARD,MAQO;AACH;AACA,iBAAKJ,MAAL,GAAc,KAAKA,MAAL,CAAYQ,MAAZ,CAAmB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,KAAKL,KAAV;AAAA,aAApB,CAAd;AACH;AACJ;;;iCAEQA,K,EAAc;AAAA;;AACnB,cAAI,CAACA,KAAL,EAAY;AAEZ,cAAMmB,OAAO,GAAG,CAAC,OAAD,EAAU,mBAAV,EAA+B,MAA/B,EAAuC,WAAvC,CAAhB;AAEA,cAAMC,cAAc,2DACf,kDAAUC,OADK,EACK,qBADL,oCAEf,kDAAUnC,KAFK,EAEG,oBAFH,oCAGf,kDAAUoC,IAHK,EAGE,kBAHF,oCAIf,kDAAUC,OAJK,EAIK,qBAJL,mBAApB;AAOAJ,iBAAO,CAACX,IAAR,CAAaY,cAAc,CAACpB,KAAK,CAACwB,IAAN,GAAa,CAAd,CAA3B;;AAEA,cAAIxB,KAAK,CAACL,IAAV,EAAgB;AACZwB,mBAAO,CAACX,IAAR,CAAa,MAAb;AACH;;AAED,iBAAOW,OAAO,CAACM,IAAR,CAAa,GAAb,CAAP;AACH;;;;;;;uBAtFQjC,c,EAAc,uH,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,4B;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,+F;AAAA;AAAA;ACR3B;;;;AAAK;;;;;;;;;sEDQQA,c,EAAc;cAD1B,uDAC0B;eADhB;AAAEkC,kBAAQ,EAAE,OAAZ;AAAqBC,qBAAW,EAAE;AAAlC,S;AACgB,Q;;;;;;;;gBACtB;;;gBACA;;;;;;;;;;;;;;;;;;;;AEVL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,S;AACT,yBACYnC,MADZ,EAEYoC,cAFZ,EAE0C;AAAA;;AAD9B,aAAApC,MAAA,GAAAA,MAAA;AACA,aAAAoC,cAAA,GAAAA,cAAA;AACR;;;;oCAEQC,K,EAA+BC,K,EAA4B;AACnE,cAAMC,IAAI,GAAG,KAAKH,cAAL,CAAoBI,SAAjC,CADmE,CAEnE;;AACAhC,iBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B8B,IAA7B;;AACA,cAAIA,IAAJ,EAAU;AACN;AACA/B,mBAAO,CAACC,GAAR,CAAY,0BAAZ,EAFM,CAGN;;AACA,mBAAO,IAAP;AACH,WATkE,CAWnE;;;AACAD,iBAAO,CAACC,GAAR,CAAY,8BAAZ,EAZmE,CAanE;;AACA,eAAKT,MAAL,CAAYyC,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAAEC,uBAAW,EAAE;AAAEC,uBAAS,EAAEL,KAAK,CAACM;AAAnB;AAAf,WAAzC;AACA,iBAAO,KAAP;AACH;;;;;;;uBAtBQT,S,EAAS,8G,EAAA,gH;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBADI;;;;;sEACbA,S,EAAS;cADrB,wDACqB;eADV;AAAEU,oBAAU,EAAE;AAAd,S;AACU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,gB;AACT,gCAAoBV,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAAkC;;;;kCAE5CW,O,EAA2BC,I,EAAiB;AAAA;;AAClD,iBAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,CAA0B,kEAAW,UAAAC,GAAG,EAAI;AAC/C,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB;AACA,oBAAI,CAAChB,cAAL,CAAoBiB,MAApB;AACH;;AAED,gBAAMC,KAAK,GAAGH,GAAG,CAACG,KAAJ,CAAU5C,OAAV,IAAqByC,GAAG,CAACI,UAAvC;AACA,mBAAO,wDAAWD,KAAX,CAAP;AACH,WARgC,CAA1B,CAAP;AASH;;;;;;;uBAbQR,gB,EAAgB,gH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAKA;;;AACA,QAAIU,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAAzD;;QAGaC,sB;;;;;;;kCACCd,O,EAA2BC,I,EAAiB;AAAA,cAC1CJ,GAD0C,GACXG,OADW,CAC1CH,GAD0C;AAAA,cACrCkB,MADqC,GACXf,OADW,CACrCe,MADqC;AAAA,cAC7BC,OAD6B,GACXhB,OADW,CAC7BgB,OAD6B;AAAA,cACpBC,IADoB,GACXjB,OADW,CACpBiB,IADoB,EAGlD;;AACA,iBAAO,gDAAG,IAAH,EACFd,IADE,CACG,gEAASe,WAAT,CADH,EAEFf,IAFE,CAEG,oEAFH,EAEkB;AAFlB,WAGFA,IAHE,CAGG,6DAAM,GAAN,CAHH,EAIFA,IAJE,CAIG,sEAJH,CAAP;;AAMA,mBAASe,WAAT,GAAuB;AACnB,oBAAQ,IAAR;AACI,mBAAKrB,GAAG,CAACsB,QAAJ,CAAa,qBAAb,KAAuCJ,MAAM,KAAK,MAAvD;AACI,uBAAOK,YAAY,EAAnB;;AACJ,mBAAKvB,GAAG,CAACsB,QAAJ,CAAa,iBAAb,KAAmCJ,MAAM,KAAK,MAAnD;AACI,uBAAOM,QAAQ,EAAf;;AACJ,mBAAKxB,GAAG,CAACsB,QAAJ,CAAa,QAAb,KAA0BJ,MAAM,KAAK,KAA1C;AACI,uBAAOO,QAAQ,EAAf;;AACJ,mBAAKzB,GAAG,CAAC0B,KAAJ,CAAU,eAAV,KAA8BR,MAAM,KAAK,KAA9C;AACI,uBAAOS,WAAW,EAAlB;;AACJ,mBAAK3B,GAAG,CAAC0B,KAAJ,CAAU,eAAV,KAA8BR,MAAM,KAAK,KAA9C;AACI,uBAAOU,UAAU,EAAjB;;AACJ,mBAAK5B,GAAG,CAAC0B,KAAJ,CAAU,eAAV,KAA8BR,MAAM,KAAK,QAA9C;AACI,uBAAOW,UAAU,EAAjB;;AACJ;AACI;AACA,uBAAOzB,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AAfR;AAiBH,WA5BiD,CA8BlD;;;AAEA,mBAASoB,YAAT,GAAwB;AAAA,gBACZO,QADY,GACWV,IADX,CACZU,QADY;AAAA,gBACFC,QADE,GACWX,IADX,CACFW,QADE;AAEpB,gBAAMpC,IAAI,GAAGiB,KAAK,CAAC/B,IAAN,CAAW,UAAAb,CAAC;AAAA,qBAAIA,CAAC,CAAC8D,QAAF,KAAeA,QAAf,IAA2B9D,CAAC,CAAC+D,QAAF,KAAeA,QAA9C;AAAA,aAAZ,CAAb;AACA,gBAAI,CAACpC,IAAL,EAAW,OAAOe,KAAK,CAAC,mCAAD,CAAZ;AACX,mBAAOsB,EAAE,CAAC;AACN9E,gBAAE,EAAEyC,IAAI,CAACzC,EADH;AAEN4E,sBAAQ,EAAEnC,IAAI,CAACmC,QAFT;AAGNG,uBAAS,EAAEtC,IAAI,CAACsC,SAHV;AAINC,sBAAQ,EAAEvC,IAAI,CAACuC,QAJT;AAKNC,mBAAK,EAAE;AALD,aAAD,CAAT;AAOH;;AAED,mBAASX,QAAT,GAAoB;AAChB,gBAAM7B,IAAI,GAAGyB,IAAb;;AAEA,gBAAIR,KAAK,CAAC/B,IAAN,CAAW,UAAAb,CAAC;AAAA,qBAAIA,CAAC,CAAC8D,QAAF,KAAenC,IAAI,CAACmC,QAAxB;AAAA,aAAZ,CAAJ,EAAmD;AAC/C,qBAAOpB,KAAK,CAAC,eAAef,IAAI,CAACmC,QAApB,GAA+B,oBAAhC,CAAZ;AACH;;AAEDnC,gBAAI,CAACzC,EAAL,GAAU0D,KAAK,CAACwB,MAAN,GAAeC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQzB,KAAK,CAAC2B,GAAN,CAAU,UAAAvE,CAAC;AAAA,qBAAIA,CAAC,CAACd,EAAN;AAAA,aAAX,CAAR,EAAJ,GAAoC,CAAnD,GAAuD,CAAjE;AACA0D,iBAAK,CAACzC,IAAN,CAAWwB,IAAX;AACAoB,wBAAY,CAACyB,OAAb,CAAqB,OAArB,EAA8B3B,IAAI,CAAC4B,SAAL,CAAe7B,KAAf,CAA9B;AACA,mBAAOoB,EAAE,EAAT;AACH;;AAED,mBAASP,QAAT,GAAoB;AAChB,gBAAI,CAACiB,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AACnB,mBAAOX,EAAE,CAACpB,KAAD,CAAT;AACH;;AAED,mBAASe,WAAT,GAAuB;AACnB,gBAAI,CAACe,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AAEnB,gBAAMhD,IAAI,GAAGiB,KAAK,CAAC/B,IAAN,CAAW,UAAAb,CAAC;AAAA,qBAAIA,CAAC,CAACd,EAAF,KAAS0F,SAAS,EAAtB;AAAA,aAAZ,CAAb;AACA,mBAAOZ,EAAE,CAACrC,IAAD,CAAT;AACH;;AAED,mBAASiC,UAAT,GAAsB;AAClB,gBAAI,CAACc,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AAEnB,gBAAIE,MAAM,GAAGzB,IAAb;AACA,gBAAIzB,IAAI,GAAGiB,KAAK,CAAC/B,IAAN,CAAW,UAAAb,CAAC;AAAA,qBAAIA,CAAC,CAACd,EAAF,KAAS0F,SAAS,EAAtB;AAAA,aAAZ,CAAX,CAJkB,CAMlB;;AACA,gBAAI,CAACC,MAAM,CAACd,QAAZ,EAAsB;AAClB,qBAAOc,MAAM,CAACd,QAAd;AACH,aATiB,CAWlB;;;AACAe,kBAAM,CAACC,MAAP,CAAcpD,IAAd,EAAoBkD,MAApB;AACA9B,wBAAY,CAACyB,OAAb,CAAqB,OAArB,EAA8B3B,IAAI,CAAC4B,SAAL,CAAe7B,KAAf,CAA9B;AAEA,mBAAOoB,EAAE,EAAT;AACH;;AAED,mBAASH,UAAT,GAAsB;AAClB,gBAAI,CAACa,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AAEnB/B,iBAAK,GAAGA,KAAK,CAAC7C,MAAN,CAAa,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACd,EAAF,KAAS0F,SAAS,EAAtB;AAAA,aAAd,CAAR;AACA7B,wBAAY,CAACyB,OAAb,CAAqB,OAArB,EAA8B3B,IAAI,CAAC4B,SAAL,CAAe7B,KAAf,CAA9B;AACA,mBAAOoB,EAAE,EAAT;AACH,WA9FiD,CAgGlD;;;AAEA,mBAASA,EAAT,CAAYZ,IAAZ,EAAmB;AACf,mBAAO,gDAAG,IAAI,iEAAJ,CAAiB;AAAEZ,oBAAM,EAAE,GAAV;AAAeY,kBAAI,EAAJA;AAAf,aAAjB,CAAH,CAAP;AACH;;AAED,mBAASV,KAAT,CAAe5C,OAAf,EAAwB;AACpB,mBAAO,wDAAW;AAAE4C,mBAAK,EAAE;AAAE5C,uBAAO,EAAPA;AAAF;AAAT,aAAX,CAAP;AACH;;AAED,mBAAS6E,YAAT,GAAwB;AACpB,mBAAO,wDAAW;AAAEnC,oBAAM,EAAE,GAAV;AAAeE,mBAAK,EAAE;AAAE5C,uBAAO,EAAE;AAAX;AAAtB,aAAX,CAAP;AACH;;AAED,mBAAS4E,UAAT,GAAsB;AAClB,mBAAOvB,OAAO,CAAC6B,GAAR,CAAY,eAAZ,MAAiC,uBAAxC;AACH;;AAED,mBAASJ,SAAT,GAAqB;AACjB,gBAAMK,QAAQ,GAAGjD,GAAG,CAACkD,KAAJ,CAAU,GAAV,CAAjB;AACA,mBAAOC,QAAQ,CAACF,QAAQ,CAACA,QAAQ,CAACb,MAAT,GAAkB,CAAnB,CAAT,CAAf;AACH;AACJ;;;;;;;uBAvHQnB,sB;AAAsB,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB;;;;;sEAAtBA,sB,EAAsB;cADlC;AACkC,Q;;;AA0H5B,QAAMmC,mBAAmB,GAAG;AAC/B;AACAC,aAAO,EAAE,sEAFsB;AAG/BC,cAAQ,EAAErC,sBAHqB;AAI/BsC,WAAK,EAAE;AAJwB,KAA5B;;;;;;;;;;;;;;;;ACnIP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,c;AACT,8BAAoBhE,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAAmC;;;;kCAE7CW,O,EAA2BC,I,EAAiB;AACpD;AACAxC,iBAAO,CAACC,GAAR,CAAY,mBAAZ,EAFoD,CAGlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAOuC,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AACH;;;;;;;uBApBQqD,c,EAAc,gH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,K,GAQT,eAAYC,IAAZ,EAAkC;AAAA;;AAC9BZ,YAAM,CAACC,MAAP,CAAc,IAAd,EAAoBW,IAApB;AACH,K;;AAGL,QAAYC,SAAZ;;AAAA,eAAYA,SAAZ,EAAqB;AACjB;AACA;AACA;AACA;AACH,KALD,EAAYA,SAAS,KAATA,SAAS,MAArB;;;;;;;;;;;;;;;;;ACbA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACOA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,YAAZ;;AAAA,eAAYA,YAAZ,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAVD,EAAYA,YAAY,KAAZA,YAAY,MAAxB;;QAYaC,Y;;;;;;;mCACcC,I,EAAe;;;AACtC,iBAAO,OAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEC,MAAN,CAAa,CAAb,OAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAGC,WAAH,EAAd,KAAiCF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEG,KAAN,CAAY,CAAZ,CAAjC,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACtBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,c;AAKT,8BACY9G,MADZ,EAEY+G,IAFZ,EAE4B;AAAA;;AADhB,aAAA/G,MAAA,GAAAA,MAAA;AACA,aAAA+G,IAAA,GAAAA,IAAA;AAER,aAAKC,WAAL,GAAmB,IAAI,oDAAJ,CAA0BvD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA1B,CAAnB;AACA,aAAKrB,IAAL,GAAY,KAAKyE,WAAL,CAAiBC,YAAjB,EAAZ;AACH;;;;8BAMK1E,I,EAAY2E,I,EAAU;AAC1B,cAAIA,IAAJ,EACE,KAAKC,KAAL,GAAaD,IAAb,CAFwB,CAG1B;;AACA1G,iBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC8B,IAAjC;AACAoB,sBAAY,CAACyB,OAAb,CAAqB,MAArB,EAA6B3B,IAAI,CAAC4B,SAAL,CAAe9C,IAAf,CAA7B;AACA,eAAKyE,WAAL,CAAiBhE,IAAjB,CAAsBT,IAAtB,EAN0B,CAO1B;;AACA/B,iBAAO,CAACC,GAAR,CAAY,QAAZ;AACA,eAAK2G,UAAL,CAAgB7E,IAAhB;AACA,iBAAO,IAAP;AACD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iCAES;AACL;AACAoB,sBAAY,CAAC0D,UAAb,CAAwB,MAAxB;AACA,eAAKC,aAAL;AACA,eAAKN,WAAL,CAAiBhE,IAAjB,CAAsB,IAAtB,EAJK,CAKL;;AACA,eAAKhD,MAAL,CAAYyC,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACH;;;wCAEe;;;AACd,qBAAK0E,KAAL,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAEI,OAAF,GAAYhI,IAAZ,CAAiB,YAAY;AACrCiB,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,WAFS,CAAV;AAGD,S,CAED;AACA;AACA;;;;mCAEW8B,I,EAAY;AACrB;AACA/B,iBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B8B,IAA1B;;AACA,cAAIA,IAAI,CAACzC,EAAL,KAAY,OAAhB,EAAyB;AACvB;AACAU,mBAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,iBAAKsG,IAAL,CAAUS,IAAV,WAAkB,sEAAYC,MAA9B,aAA8ClF,IAA9C;AACD;AACF;;;iCAEQ;AACL,iBAAO,KAAKwE,IAAL,CAAUnB,GAAV,WAAyB,sEAAY6B,MAArC,YAAP;AACH;;;4BA1DmB;AAChB,iBAAO,KAAKT,WAAL,CAAiBU,KAAxB;AACH;;;;;;;uBAfQZ,c,EAAc,8G,EAAA,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBADD;;;;;sEACbA,c,EAAc;cAD1B,wDAC0B;eADf;AAAEjE,oBAAU,EAAE;AAAd,S;AACe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa8E,Y;AADb;AAAA;;AAEY,aAAAC,OAAA,GAAU,IAAI,4CAAJ,EAAV;AACA,aAAAC,SAAA,GAAY,eAAZ;AAkCX,O,CAhCG;;;;;kCAC2B;AAAA,cAAnB/H,EAAmB,uEAAd,KAAK+H,SAAS;AACvB,iBAAO,KAAKD,OAAL,CAAaX,YAAb,GAA4B/D,IAA5B,CAAiC,8DAAO,UAAAtC,CAAC;AAAA,mBAAIA,CAAC,IAAIA,CAAC,CAACd,EAAF,KAASA,EAAlB;AAAA,WAAR,CAAjC,CAAP;AACH,S,CAED;;;;gCACQY,O,EAAiBoH,O,EAAe;AACpC,eAAKvH,KAAL,CAAW,IAAI,6CAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMuH,OAAN,CAAC,EAAY;AAAE/F,gBAAI,EAAE,kDAAUH,OAAlB;AAA2BlB,mBAAO,EAAPA;AAA3B,WAAZ,CAAV,CAAX;AACH;;;8BAEKA,O,EAAiBoH,O,EAAe;AAClC,eAAKvH,KAAL,CAAW,IAAI,6CAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMuH,OAAN,CAAC,EAAY;AAAE/F,gBAAI,EAAE,kDAAUtC,KAAlB;AAAyBiB,mBAAO,EAAPA;AAAzB,WAAZ,CAAV,CAAX;AACH;;;6BAEIA,O,EAAiBoH,O,EAAe;AACjC,eAAKvH,KAAL,CAAW,IAAI,6CAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMuH,OAAN,CAAC,EAAY;AAAE/F,gBAAI,EAAE,kDAAUF,IAAlB;AAAwBnB,mBAAO,EAAPA;AAAxB,WAAZ,CAAV,CAAX;AACH;;;6BAEIA,O,EAAiBoH,O,EAAe;AACjC,eAAKvH,KAAL,CAAW,IAAI,6CAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMuH,OAAN,CAAC,EAAY;AAAE/F,gBAAI,EAAE,kDAAUD,OAAlB;AAA2BpB,mBAAO,EAAPA;AAA3B,WAAZ,CAAV,CAAX;AACH,S,CAED;;;;8BACMH,M,EAAc;AAChBA,gBAAK,CAACT,EAAN,GAAWS,MAAK,CAACT,EAAN,IAAY,KAAK+H,SAA5B;AACA,eAAKD,OAAL,CAAa5E,IAAb,CAAkBzC,MAAlB;AACH,S,CAED;;;;gCAC2B;AAAA,cAArBT,EAAqB,uEAAhB,KAAK+H,SAAW;AACvB,eAAKD,OAAL,CAAa5E,IAAb,CAAkB,IAAI,6CAAJ,CAAU;AAAElD,cAAE,EAAFA;AAAF,WAAV,CAAlB;AACH;;;;;;;uBAnCQ6H,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBADC;;;;;sEACbA,Y,EAAY;cADxB,wDACwB;eADb;AAAE9E,oBAAU,EAAE;AAAd,S;AACa,Q;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMakF,e;AACT,+BACYC,UADZ,EACkC;AAAA;;AAAtB,aAAAA,UAAA,GAAAA,UAAA;AACR;;;;iCAEK;AACL,iBAAO,KAAKA,UAAL,CAAgBpC,GAAhB,WAAmC,sEAAY6B,MAA/C,eAAP;AACH;;;6CAEoBQ,Q,EAAoB;AACvC,iBAAO,KAAKD,UAAL,CACJR,IADI,WACI,sEAAYC,MADhB,gBACmC;AAAC3H,cAAE,EAAEmI,QAAQ,CAACnI,EAAd;AAAkBoI,iBAAK,EAAED,QAAQ,CAACC,KAAlC;AACtCC,uBAAW,EAAEF,QAAQ,CAACE,WADgB;AACHpG,gBAAI,EAAEkG,QAAQ,CAAClG;AADZ,WADnC,CAAP;AAGD;;;;;;;uBAbQgG,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBADF;;;;;sEACbA,e,EAAe;cAD3B,wDAC2B;eADhB;AAAElF,oBAAU,EAAE;AAAd,S;AACgB,Q;;;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8DauF,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,iBAVnB,CACT;AACInC,eAAO,EAAE,qFADb;AAEIoC,gBAAQ,EAAE;AACNC,mBAAS,EAAE;AADL;AAFd,OADS,C;AAOZ,gBAvCU,CACL,4DADK,EAEL,wEAFK,EAGL,gFAHK,EAIL,sEAJK,EAKL,0EALK,EAML,oEANK,EAOL,0EAPK,EAQL,0EARK,EASL,qEATK,EAUL,2EAVK,EAWL,uEAXK,EAYL,6EAZK,EAaL,yEAbK,EAcL,4FAdK,CAuCV,EAtBK,wEAsBL,EArBK,mFAqBL,EApBK,gFAoBL,EAnBK,sEAmBL,EAlBK,0EAkBL,EAjBK,oEAiBL,EAhBK,0EAgBL,EAfK,0EAeL,EAdK,qEAcL,EAbK,2EAaL,EAZK,uEAYL,EAXK,6EAWL,EAVK,yEAUL,EATK,4FASL;;;;0HAGUF,qB,EAAqB;AAAA,kBAzC1B,4DAyC0B,EAxC1B,wEAwC0B,EAvC1B,gFAuC0B,EAtC1B,sEAsC0B,EArC1B,0EAqC0B,EApC1B,oEAoC0B,EAnC1B,0EAmC0B,EAlC1B,0EAkC0B,EAjC1B,qEAiC0B,EAhC1B,2EAgC0B,EA/B1B,uEA+B0B,EA9B1B,6EA8B0B,EA7B1B,yEA6B0B,EA5B1B,4FA4B0B;AA5BF,kBAGxB,wEAHwB,EAIxB,mFAJwB,EAKxB,gFALwB,EAMxB,sEANwB,EAOxB,0EAPwB,EAQxB,oEARwB,EASxB,0EATwB,EAUxB,0EAVwB,EAWxB,qEAXwB,EAYxB,2EAZwB,EAaxB,uEAbwB,EAcxB,6EAdwB,EAexB,yEAfwB,EAgBxB,4FAhBwB;AA4BE,O;AAZF,K;;;;;sEAYnBA,qB,EAAqB;cA3CjC,sDA2CiC;eA3CxB;AACNG,iBAAO,EAAE,CACL,4DADK,EAEL,wEAFK,EAGL,gFAHK,EAIL,sEAJK,EAKL,0EALK,EAML,oEANK,EAOL,0EAPK,EAQL,0EARK,EASL,qEATK,EAUL,2EAVK,EAWL,uEAXK,EAYL,6EAZK,EAaL,yEAbK,EAcL,4FAdK,CADH;AAiBN1I,iBAAO,EAAE,CACL,wEADK,EAEL,mFAFK,EAGL,gFAHK,EAIL,sEAJK,EAKL,0EALK,EAML,oEANK,EAOL,0EAPK,EAQL,0EARK,EASL,qEATK,EAUL,2EAVK,EAWL,uEAXK,EAYL,6EAZK,EAaL,yEAbK,EAcL,4FAdK,CAjBH;AAiCN2I,mBAAS,EAAE,CACT;AACIvC,mBAAO,EAAE,qFADb;AAEIoC,oBAAQ,EAAE;AACNC,uBAAS,EAAE;AADL;AAFd,WADS;AAjCL,S;AA2CwB,Q;;;;;;;;;;;;;;;;;;AC9DlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mC,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOA,QAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA,8CAAmClJ,IAAnC,CAAwC,UAAAqB,CAAC;AAAA,eAAIA,CAAC,CAAC8H,aAAN;AAAA,OAAzC,CAAN;AAAA,KAAtB;;AACA,QAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA,0CAA+BpJ,IAA/B,CAAoC,UAAAqB,CAAC;AAAA,eAAIA,CAAC,CAACgI,WAAN;AAAA,OAArC,CAAN;AAAA,KAApB;;AAEA,QAAMC,MAAM,GAAW,CACnB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,mDAAvB;AAAsCC,iBAAW,EAAE,CAAC,kDAAD;AAAnD,KADmB,EAEnB;AAAEF,UAAI,EAAE,OAAR;AAAiBG,kBAAY,EAAEN,WAA/B;AAA4CK,iBAAW,EAAE,CAAC,kDAAD;AAAzD,KAFmB,EAGnB;AAAEF,UAAI,EAAE,SAAR;AAAmBG,kBAAY,EAAER;AAAjC,KAHmB,EAKnB;AACA;AAAEK,UAAI,EAAE,IAAR;AAAcI,gBAAU,EAAE;AAA1B,KANmB,CAOnB;AAPmB,KAAvB;;QAcaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHhB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGgB,EAFf,4DAEe;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFf,4DAEe;AAAA,O;AAFH,K;;;;;sEAEbA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACNZ,iBAAO,EAAE,CAAC,6DAAaa,OAAb,CAAqBP,MAArB,CAAD,CADH;AAENhJ,iBAAO,EAAE,CAAC,4DAAD;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;AClC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4DI;;AAAsD;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAKtD;;;;;;AAAwB;;;;;;AACxB;;;;;;;;;;;;;;AAdJ;;AACE;;AACE;;AACA;;AAAM;;AAAK;;AACb;;AACA;;AACA;;AACE;;AAA0B;;AAAiB;;AAC3C;;AACA;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAS;;AAAsC;;AAC1F;;AACA;;AACE;;AACA;;AACF;;AACF;;;;;;;;AAf8D;;AAAA;;AAMhC;;AAAA;;AACrB;;AAAA;;AAIiB;;AAAA;;AACjB;;AAAA;;AACK;;AAAA;;;;QD6EDwJ,Y;AAGT,4BACUC,eADV,EAEUC,YAFV,EAGUnH,cAHV,EAGwC;AAAA;;AAAA;;AAF9B,aAAAkH,eAAA,GAAAA,eAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAnH,cAAA,GAAAA,cAAA;AAER,aAAKA,cAAL,CAAoBG,IAApB,CAAyBjC,SAAzB,CAAmC,UAAAM,CAAC;AAAA,iBAAI,MAAI,CAAC2B,IAAL,GAAY3B,CAAhB;AAAA,SAApC;AACA,aAAK0I,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,KADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,mBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,UADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,wBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,OADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,qBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,UADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,wBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,SADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,uBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,QADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,sBAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,uBADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,qCAAjD,CAFF;AAIA,aAAKH,eAAL,CAAqBE,UAArB,CACE,eADF,EAEE,KAAKD,YAAL,CAAkBE,8BAAlB,CAAiD,6BAAjD,CAFF;AAID;;;;iCAEQ;AACL,eAAKrH,cAAL,CAAoBiB,MAApB;AACH;;;;;;;uBAzEQgG,Y,EAAY,uI,EAAA,uI,EAAA,yH;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,soB;AAAA;AAAA;AC3FzB;;AAmBA;;AACE;;AACA;;AACF;;;;AAtBa;;;;;;;;;sED2FAA,Y,EAAY;cALxB,uDAKwB;eALd;AACTpH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTwH,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AE/IzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;AAOA;;;QAkCaC,S;;;;;YAAAA,S;AAAS,kBAHR,2DAGQ;;;;yBAATA,S;AAAS,O;AAAA,iBAXT,CACP;AAAE1D,eAAO,EAAE,sEAAX;AAA8BC,gBAAQ,EAAE,uDAAxC;AAAwDC,aAAK,EAAE;AAA/D,OADO,EAEP;AAAEF,eAAO,EAAE,sEAAX;AAA8BC,gBAAQ,EAAE,yDAAxC;AAA0DC,aAAK,EAAE;AAAjE,OAFO,EAGP;AAAEF,eAAO,EAAG,iEAAZ;AAA+BC,gBAAQ,EAAE;AAAzC,OAHO,EAKP;AACA,kEANO,C;AAOV,gBAfQ,CACP,uEADO,EAEP,kEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,8EALO,EAMP,qEANO,CAeR;;;;0HAIUyD,S,EAAS;AAAA,uBAvBlB,2DAuBkB,EAtBlB,0DAsBkB,EArBlB,oDAqBkB;AArBL,kBAGb,uEAHa,EAIb,kEAJa,EAKb,oEALa,EAMb,4FANa,EAOb,8EAPa,EAQb,qEARa;AAqBK,O;AAbF,K;;;;;sEAaPA,S,EAAS;cAzBrB,sDAyBqB;eAzBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,0DAFY,EAGZ,oDAHY,CADN;AAMRrB,iBAAO,EAAE,CACP,uEADO,EAEP,kEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,8EALO,EAMP,qEANO,CAND;AAcRC,mBAAS,EAAE,CACP;AAAEvC,mBAAO,EAAE,sEAAX;AAA8BC,oBAAQ,EAAE,uDAAxC;AAAwDC,iBAAK,EAAE;AAA/D,WADO,EAEP;AAAEF,mBAAO,EAAE,sEAAX;AAA8BC,oBAAQ,EAAE,yDAAxC;AAA0DC,iBAAK,EAAE;AAAjE,WAFO,EAGP;AAAEF,mBAAO,EAAG,iEAAZ;AAA+BC,oBAAQ,EAAE;AAAzC,WAHO,EAKP;AACA,sEANO,CAdH;AAsBR2D,mBAAS,EAAE,CAAC,2DAAD,CAtBH;AAuBRC,iBAAO,EAAE,CAAC,oEAAD;AAvBD,S;AAyBY,Q;;;;;;;;;;;;;;;;;;AC/CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,a,GAKT,uBAAoB3H,cAApB,EAA4D4F,UAA5D,EAAoF;AAAA;;AAAhE,WAAA5F,cAAA,GAAAA,cAAA;AAAwC,WAAA4F,UAAA,GAAAA,UAAA;AAF5D,WAAApF,GAAA,GAAM,2FAAN;AAGI,WAAKL,IAAL,GAAY,KAAKH,cAAL,CAAoBI,SAAhC;AACH,K;;;uBAPQuH,a,EAAa,yH,EAAA,gI;AAAA,K;;;YAAbA,a;AAAa,mC;AAAA,c;AAAA,a;AAAA,wE;AAAA;AAAA;ACR1B;;AAAI;;AAAqB;;AACzB;;AAAG;;AAA6B;;AAAY;;AAAI;;AAChD;;AAAG;;AAAuB;;AAAgB;;AAAI;;;;AAF1C;;AAAA;;;;;;;;;sEDQSA,a,EAAa;cADzB,uDACyB;eADf;AAAE7H,qBAAW,EAAE;AAAf,S;AACe,Q;;;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM8H,WAAW,GAAG;AACvBC,gBAAU,EAAE,KADW;AAEvBxC,YAAM,EAAE;AAFe,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYwC,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA/G,GAAG;AAAA,aAAI3C,OAAO,CAAC8C,KAAR,CAAcH,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '../_models';\nimport { AlertService } from '../_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n              //remove\n              console.log(alert);\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            this.alerts.find(x => x === alert).fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n\n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type - 1]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","export * from './alert.component';\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        //remove\n        console.log('user in guard', user);\n        if (user) {\n            //remove\n            console.log('user in guard authorized');\n            // authorised so return true\n            return true;\n        }\n\n        //remove\n        console.log('user in guard not authorized');\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n                    return getUserById();\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\n                    return updateUser();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function getUserById() {\n            if (!isLoggedIn()) return unauthorized();\n\n            const user = users.find(x => x.id === idFromUrl());\n            return ok(user);\n        }\n\n        function updateUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            let params = body;\n            let user = users.find(x => x.id === idFromUrl());\n\n            // only update password if entered\n            if (!params.password) {\n                delete params.password;\n            }\n\n            // update and save user\n            Object.assign(user, params);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { AccountService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      //remove\n      console.log('in JwtInterceptor');\n        // add auth header with jwt if user is logged in and request is to the api url\n        // Do not use token for now - use it when there is https\n        // const user = this.accountService.userValue;\n        // const isLoggedIn = user && user.token;\n        // const isApiUrl = request.url.startsWith(environment.apiUrl);        \n        // if (isLoggedIn && isApiUrl) {\n        //     request = request.clone({\n        //         setHeaders: {\n        //             Authorization: `Bearer ${user.token}`\n        //         }\n        //     });\n        // }\n\n        return next.handle(request);\n    }\n}\n","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","export * from './alert';\nexport * from './user';\nexport * from './vacation';\n","export interface Vacation {\n    id: string; // user id (email) - uuid\n    title: string;\n    description: string;\n    type: VacationType; // e.g. cruise\n}\n\nexport enum VacationType {\n    cruise = 'cruise',\n    travel = 'travel',\n    sports = 'sports',\n    shopping = 'shopping',\n    flight = 'flight',\n    business = 'business',\n    virtual = 'virtual',\n    nature = 'nature',\n    other = 'other'\n}\n\nexport class VacationUtil {\n  public static capitalize(name?: string) {\n    return name?.charAt(0)?.toUpperCase() + name?.slice(1)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private auth2: any;\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(user: User, auth?: any): boolean {\n      if (auth)\n        this.auth2 = auth;\n      //remove\n      console.log('in login user is ', user);\n      localStorage.setItem('user', JSON.stringify(user));\n      this.userSubject.next(user);\n      //remove\n      console.log('create');\n      this.createUser(user);\n      return true;\n    }\n\n    // login(username, password) {\n    //     return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\n    //         .pipe(map(user => {\n    //             // store user details and jwt token in local storage to keep user logged in between page refreshes\n    //             localStorage.setItem('user', JSON.stringify(user));\n    //             this.userSubject.next(user);\n    //             return user;\n    //         }));\n    // }\n\n    logout() {\n        //remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.googleSignOut();\n        this.userSubject.next(null);\n        //this.router.navigate(['/account/login']);\n        this.router.navigate(['/account/register']);\n    }\n\n    googleSignOut() {\n      this.auth2?.signOut().then(function () {\n        console.log('User google signed out.');\n      });\n    }\n\n    // register(user: User) {\n    //     return this.http.post(`${environment.apiUrl}/users/register`, user);\n    // }\n\n    createUser(user: User) {\n      //remove\n      console.log('createUser', user);\n      if (user.id !== 'guest') {\n        //remove\n        console.log('not guest - create');\n        this.http.post(`${environment.apiUrl}/greet`, user);\n      }\n    }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/greet`);\n    }\n\n    // getById(id: string) {\n    //     return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n    // }\n\n    // update(id, params) {\n    //     return this.http.put(`${environment.apiUrl}/users/${id}`, params)\n    //         .pipe(map(x => {\n    //             // update stored user if the logged in user updated their own record\n    //             if (id == this.userValue.id) {\n    //                 // update local storage\n    //                 const user = { ...this.userValue, ...params };\n    //                 localStorage.setItem('user', JSON.stringify(user));\n    //\n    //                 // publish updated user to subscribers\n    //                 this.userSubject.next(user);\n    //             }\n    //             return x;\n    //         }));\n    // }\n    //\n    // delete(id: string) {\n    //     return this.http.delete(`${environment.apiUrl}/users/${id}`)\n    //         .pipe(map(x => {\n    //             // auto logout if the logged in user deleted their own record\n    //             if (id == this.userValue.id) {\n    //                 this.logout();\n    //             }\n    //             return x;\n    //         }));\n    // }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '../_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method\n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}\n","export * from './account.service';\nexport * from './alert.service';\nexport * from './vacation.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Vacation } from '../_models';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class VacationService {\n    constructor(\n        private httpClient: HttpClient\n    ) {}\n\n    getAll() {\n        return this.httpClient.get<Vacation[]>(`${environment.apiUrl}/vacation`);\n    }\n\n    createUpdateVacation(vacation: Vacation) {\n      return this.httpClient\n        .post(`${environment.apiUrl}/vacation`, {id: vacation.id, title: vacation.title,\n          description: vacation.description, type: vacation.type});\n    }\n\n    // getById(id: string) {\n    //     return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n    // }\n\n    // update(id, params) {\n    //     return this.http.put(`${environment.apiUrl}/users/${id}`, params)\n    //         .pipe(map(x => {\n    //             // update stored user if the logged in user updated their own record\n    //             if (id == this.userValue.id) {\n    //                 // update local storage\n    //                 const user = { ...this.userValue, ...params };\n    //                 localStorage.setItem('user', JSON.stringify(user));\n    //\n    //                 // publish updated user to subscribers\n    //                 this.userSubject.next(user);\n    //             }\n    //             return x;\n    //         }));\n    // }\n    //\n    // delete(id: string) {\n    //     return this.http.delete(`${environment.apiUrl}/users/${id}`)\n    //         .pipe(map(x => {\n    //             // auto logout if the logged in user deleted their own record\n    //             if (id == this.userValue.id) {\n    //                 this.logout();\n    //             }\n    //             return x;\n    //         }));\n    // }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MAT_TOOLTIP_DEFAULT_OPTIONS } from \"@angular/material/tooltip\";\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatMenuModule,\n        MatDividerModule,\n        MatTableModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatProgressSpinnerModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatMenuModule,\n        MatDividerModule,\n        MatTableModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatProgressSpinnerModule\n    ],\n    providers: [\n      {\n          provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n          useValue: {\n              showDelay: 2000\n          }\n      }\n  ]\n})\n\nexport class AngularMaterialModule { }\n","// import { NgModule } from '@angular/core';\n// import { Routes, RouterModule } from '@angular/router';\n//\n//\n// const routes: Routes = [];\n//\n// @NgModule({\n//   imports: [RouterModule.forRoot(routes)],\n//   exports: [RouterModule]\n// })\n// export class AppRoutingModule { }\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n    //{ path: '**', redirectTo: 'account/login' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/*import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'vachub';\n  fromRest: any;\n  auth2: any;\n  token: any;\n  id: any;\n  userName: string;\n  userImage: any;\n  userEmail: string;\n  @ViewChild('loginRef', {static: true }) loginElement: ElementRef;\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    private httpClient: HttpClient\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      'google',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/google.svg')\n    );\n    this.matIconRegistry.addSvgIcon(\n      'logout',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/logout.svg')\n    );\n    this.matIconRegistry.addSvgIcon(\n      'vh2',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/vh2.svg')\n    );\n  }\n\n  ngOnInit() {\n    this.googleSDK();\n    // this.fakeData();\n  }\n\n  prepareLoginButton() {\n\n    this.auth2.attachClickHandler(this.loginElement.nativeElement, {},\n      (googleUser) => {\n\n        let profile = googleUser.getBasicProfile();\n        this.token = googleUser.getAuthResponse().id_token;\n        this.id = profile.getId();\n        this.userName = profile.getName();\n        this.userImage = profile.getImageUrl();\n        this.userEmail = profile.getEmail();\n        console.log(this.token);\n        console.log(this.id);\n        console.log(this.userName);\n        console.log(this.userImage);\n        console.log(this.userEmail);\n        this.title = this.userName;\n      }, (error) => {\n        alert(JSON.stringify(error, undefined, 2));\n      });\n\n  }\n\n  signOut() {\n    this.auth2.signOut().then(function () {\n      this.token = undefined;\n      this.id = undefined;\n      this.userName = undefined;\n      this.userImage = undefined;\n      this.userEmail = undefined;\n      console.log('User signed out.');\n    });\n  }\n\n  fakeSignOut() {\n    this.token = undefined;\n    this.id = undefined;\n    this.userName = undefined;\n    this.userImage = undefined;\n    this.userEmail = undefined;\n    console.log('User signed out.');\n  }\n\n  public showRest() {\n    this.getRest().subscribe(result => this.fromRest = result,\n    error => this.fromRest = error.error.text);\n  }\n\n  private getRest() {\n    return this.httpClient.get('http://shira-jaxrs-docker-example-git-vachub.apps.us-west-1.starter.openshift-online.com/greet');\n  }\n\n  googleSDK() {\n\n    window['googleSDKLoaded'] = () => {\n      window['gapi'].load('auth2', () => {\n        this.auth2 = window['gapi'].auth2.init({\n          client_id: '84095791683-jamqlcm8okffem4uldev6oas68stqjlh.apps.googleusercontent.com',\n          cookiepolicy: 'single_host_origin',\n          scope: 'profile email'\n        });\n        this.prepareLoginButton();\n      });\n    }\n\n    (function(d, s, id){\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {return;}\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'google-jssdk'));\n\n  }\n\n  fakeData() {\n    this.token = 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjI4Yjc0MWU4ZGU5ODRhNDcxNTlmMTllNmQ3NzgzZTlkNGZhODEwZGIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiODQwOTU3OTE2ODMtamFtcWxjbThva2ZmZW00dWxkZXY2b2FzNjhzdHFqbGguYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI4NDA5NTc5MTY4My1qYW1xbGNtOG9rZmZlbTR1bGRldjZvYXM2OHN0cWpsaC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExMTY3Mzg4NzUyNDE0ODgwODU4MiIsImVtYWlsIjoic2hpcmEueW9rZWRAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF0X2hhc2giOiJ4Q0F4NFNBRFVma0pPNUY3ZWdCWVZnIiwibmFtZSI6IlNoaXJhIFlva2VkIiwicGljdHVyZSI6Imh0dHBzOi8vbGg0Lmdvb2dsZXVzZXJjb250ZW50LmNvbS8tamVfQlpBaWlkRFEvQUFBQUFBQUFBQUkvQUFBQUFBQUFBQUEvQUFLV0pKTWcxODBUNUdhZWpkZmFPR1poZ0JJLURLZGhtdy9zOTYtYy9waG90by5qcGciLCJnaXZlbl9uYW1lIjoiU2hpcmEiLCJmYW1pbHlfbmFtZSI6Illva2VkIiwibG9jYWxlIjoiZW4iLCJpYXQiOjE1ODgxMjAxMzksImV4cCI6MTU4ODEyMzczOSwianRpIjoiYTJmYWYyOWQwYjc0MTY2Yzc0YTdjZWFjZjViMWY0MDU5ZjNjZTBmNSJ9.qkA4O3jqjNsd1MHAZAbertNpOQ0fAYxXuE6NFNuGs9swJ9ZJcWtM9HC13jvc84bD5Bq63ewdCKsKPep1YbVTYKypCkntjHGsHiY5SBt4snDWI7v_4F84n4HZOcymZ8weRqy6t8LKBcHeNMC0mlFYvdFb5IiTaWb5xPtmdKSF_pW2yQFLr2kkylyvTQznmr39wE2DKDgT61sHBz27aH_z-Qvj6on4J6rUjc1m_28KlFgxNSdwDX3JR8_eDvt5d9pCdC-Av4SLEGqO2qEccAJQ4uMi1xFi1s-qi3iVhhQRQg3JfpuwmvvKA1AbsfsB7tzW98ppeht9nMPuqr_4-QXvRg';\n    this.id = '111673887524148808582';\n    this.userName = 'Shira Yoked';\n    this.userImage = 'https://lh4.googleusercontent.com/-je_BZAiidDQ/AAAAAAAAAAI/AAAAAAAAAAA/AAKWJJMg180T5GaejdfaOGZhgBI-DKdhmw/s96-c/photo.jpg';\n    this.userEmail = 'shira.yoked@gmail.com';\n  }\n}*/\n\nimport { Component } from '@angular/core';\n\nimport { AccountService } from './_services';\nimport { User } from './_models';\n\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    user: User;\n\n    constructor(\n      private matIconRegistry: MatIconRegistry,\n      private domSanitizer: DomSanitizer,\n      private accountService: AccountService\n    ) {\n      this.accountService.user.subscribe(x => this.user = x);\n      this.matIconRegistry.addSvgIcon(\n        'google',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/google.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'logout',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/logout.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'vh2',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/vh2.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'cruise',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/cruise.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'travel',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/travel.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'shopping',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/shopping.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'flight',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/flight.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'sports',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/sports.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'other',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/other.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'search',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/search.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'business',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/business.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'virtual',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/virtual.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'nature',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/nature.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'default-profile-image',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/default-profile-image.svg')\n      );\n      this.matIconRegistry.addSvgIcon(\n        'chevron-right',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/chevron-right.svg')\n      );\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}\n","<!-- <mat-toolbar color=\"primary\">\n  <mat-icon svgIcon=\"vh2\" class=\"vh-logo\"></mat-icon>\n  <span>acHub</span>\n  <span class=\"vh-spacer\"></span>\n  <mat-icon *ngIf=\"!token\" svgIcon=\"google\" class=\"vh-icon\"></mat-icon>\n  <a class=\"vh-login-google\" #loginRef>\n    <span *ngIf=\"!token\">Sign In with Google</span>\n  </a>\n  <mat-menu #appMenu=\"matMenu\">\n    <div *ngIf=\"userName\" class=\"vh-user-name\">Hi {{userName}}!</div>\n    <div *ngIf=\"userEmail\" class=\"vh-user-name\">{{userEmail}}</div>\n    <mat-divider></mat-divider>\n    <button mat-menu-item (click)=\"signOut()\">Sign Out <mat-icon svgIcon=\"logout\"></mat-icon></button>\n  </mat-menu>\n  <button *ngIf=\"token\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n    <img *ngIf=\"userImage\" [src]=\"userImage\" class=\"vh-icon vh-user-image\">\n    <mat-icon svgIcon=\"google\" class=\"vh-icon\"></mat-icon>\n  </button>\n</mat-toolbar>\n<button mat-raised-button color=\"primary\" (click)=\"showRest()\">Get Rest</button>\n<mat-progress-bar mode=\"determinate\" color=\"accent\" value=\"40\"></mat-progress-bar>\n<mat-form-field color=\"accent\">\n  <mat-label>Choose a date</mat-label>\n  <input matInput [matDatepicker]=\"picker\">\n  <mat-datepicker-toggle matSuffix [for]=\"picker\" color=\"accent\"></mat-datepicker-toggle>\n  <mat-datepicker #picker color=\"accent\"></mat-datepicker>\n</mat-form-field>\nfrom rest: {{fromRest}}<br>\ntoken: {{token}} <div *ngIf=\"token\">yes</div><div *ngIf=\"!token\">no</div>\nname: {{userName}}, title: {{title}} -->\n\n\n<!-- <div class=\"container mt-5\">\n  <h2>Google Login</h2>\n  <div class=\"row mt-5\">\n    <div class=\"col-md-4 mt-2 m-auto \">\n        <button class=\"loginBtn loginBtn--google\" #loginRef>\n            Login with Google\n          </button>\n    </div>\n  </div>\n</div> -->\n\n<!-- nav -->\n<!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav> -->\n\n<mat-toolbar *ngIf=\"user\" color=\"primary\">\n  <a class=\"vh-home\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n    <mat-icon svgIcon=\"vh2\" class=\"vh-logo\"></mat-icon>\n    <span>acHub</span>\n  </a>\n  <span class=\"vh-spacer\"></span>\n  <mat-menu #appMenu=\"matMenu\">\n    <div class=\"vh-user-name\">{{user.username}}</div>\n    <div *ngIf=\"user.id !== 'guest'\" class=\"vh-user-name\">{{user.id}}</div>\n    <mat-divider></mat-divider>\n    <button mat-menu-item (click)=\"logout()\">Sign Out <mat-icon svgIcon=\"logout\"></mat-icon></button>\n  </mat-menu>\n  <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n    <img *ngIf=\"user.image\" [src]=\"user.image\" class=\"vh-user-image\">\n    <mat-icon *ngIf=\"!user.image\" svgIcon=\"default-profile-image\" class=\"default-user-image\"></mat-icon>\n  </button>\n</mat-toolbar>\n\n<!-- main app container -->\n<div class=\"vh-main\">\n  <alert></alert>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n/* Angular material */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AlertComponent } from './_components';\nimport { HomeComponent } from './home';\n\nimport { HashLocationStrategy, LocationStrategy  } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlertComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    HttpClientModule\n  ],\n  providers: [\n      { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n      { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n      { provide : LocationStrategy , useClass: HashLocationStrategy },\n\n      // provider used to create fake backend\n      fakeBackendProvider\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\nimport { User } from '../_models';\nimport { AccountService } from '../_services';\n\nimport { HttpClient } from '@angular/common/http';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    user: User;\n    fromRest: string;\n    url = 'http://shira-jaxrs-docker-example-git-vachub.apps.us-west-1.starter.openshift-online.com/';\n\n    constructor(private accountService: AccountService, private httpClient: HttpClient) {\n        this.user = this.accountService.userValue;\n    }\n\n    // public showGetRest() {\n    //   this.getRest().subscribe(result => this.fromRest = result);\n    // }\n    //\n    // private getRest() {\n    //   return this.httpClient\n    //     .get(this.url + 'vacation', {responseType: 'text'});\n    // }\n    //\n    // public showPostRest() {\n    //   this.postRest().subscribe(result => this.fromRest = result as string);\n    // }\n    //\n    // private postRest() {\n    //   return this.httpClient\n    //     .post(this.url + 'vacation', {id: this.user.id + '-1', title: 'my vac', description: 'a great vac', type: 'cruise'});\n    // }\n}\n","<h1>Hi {{user.username}}!</h1>\n<p><a routerLink=\"/users/users\">Manage Users</a></p>\n<p><a routerLink=\"/users\">Manage Vacations</a></p>\n<!-- <button mat-raised-button color=\"primary\" (click)=\"showGetRest()\">Get Rest</button>\n<button mat-raised-button color=\"accent\" (click)=\"showPostRest()\">Post Rest</button>\nfrom rest: {{fromRest}}<br> -->\n","export * from './home.component';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://shira-jaxrs-docker-example-git-vachub.apps.us-west-1.starter.openshift-online.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}